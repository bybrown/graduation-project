// -------------------------------------------------------------
// 
// File Name: C:\Users\busra\BITIRME\codegen\Direct_Form_IIR_Figure4_GeneratedCode\hdlsrc\Direct_Form_IIR_Figure4_GeneratedCode_fixpt.v
// Created: 2022-02-18 16:38:11
// 
// Generated by MATLAB 9.7, MATLAB Coder 4.3 and HDL Coder 3.15
// 
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Design base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// y                             ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Direct_Form_IIR_Figure4_GeneratedCode_fixpt
// Source Path: Direct_Form_IIR_Figure4_GeneratedCode_fixpt
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Direct_Form_IIR_Figure4_GeneratedCode_fixpt
          (clk,
           reset,
           clk_enable,
           x,
           a1,
           a2,
           a3,
           b0,
           b1,
           b2,
           b3,
           ce_out,
           y);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [13:0] x;  // sfix14_En12
  input   signed [13:0] a1;  // sfix14_En15
  input   signed [13:0] a2;  // sfix14_En14
  input   [13:0] a3;  // ufix14_En16
  input   b0;  // ufix1
  input   [1:0] b1;  // ufix2
  input   b2;  // ufix1
  input   b3;  // ufix1
  output  ce_out;
  output  signed [13:0] y;  // sfix14_En11


  wire enb;
  reg signed [13:0] n10_add_reg_2;  // sfix14_En11
  reg signed [13:0] n10_add_reg_3;  // sfix14_En11
  wire signed [13:0] n3_mul;  // sfix14_En14
  wire signed [14:0] p8n3_mul_cast;  // sfix15_En16
  wire signed [28:0] p8n3_mul_mul_temp;  // sfix29_En27
  wire signed [27:0] p8n3_mul_cast_1;  // sfix28_En27
  wire signed [13:0] p8n3_mul_cast_2;  // sfix14_En10
  reg signed [13:0] n10_add_reg_1;  // sfix14_En11
  wire signed [13:0] n2_mul;  // sfix14_En13
  wire signed [27:0] p6n2_mul_mul_temp;  // sfix28_En25
  wire signed [13:0] p6n2_mul_cast;  // sfix14_En10
  wire signed [13:0] n8_add;  // sfix14_En12
  wire signed [15:0] p15n8_add_add_cast;  // sfix16_En14
  wire signed [15:0] p15n8_add_add_cast_1;  // sfix16_En14
  wire signed [15:0] p15n8_add_add_temp;  // sfix16_En14
  wire signed [13:0] p15n8_add_cast;  // sfix14_En11
  wire signed [13:0] tmp;  // sfix14_En11
  wire signed [13:0] n1_mul;  // sfix14_En14
  wire signed [27:0] p4n1_mul_mul_temp;  // sfix28_En26
  wire signed [13:0] p4n1_mul_cast;  // sfix14_En10
  wire signed [13:0] n9_add;  // sfix14_En12
  wire signed [16:0] p17n9_add_add_cast;  // sfix17_En14
  wire signed [16:0] p17n9_add_add_cast_1;  // sfix17_En14
  wire signed [16:0] p17n9_add_add_temp;  // sfix17_En14
  wire signed [13:0] p17n9_add_cast;  // sfix14_En11
  wire signed [14:0] p19tmp_add_cast;  // sfix15_En12
  wire signed [14:0] p19tmp_add_cast_1;  // sfix15_En12
  wire signed [14:0] p19tmp_add_temp;  // sfix15_En12
  wire signed [13:0] n6_mul;  // sfix14_En11
  wire signed [13:0] p12n6_mul_1;  // sfix14_En11
  wire signed [14:0] p12n6_mul_cast;  // sfix15_En11
  wire signed [13:0] p12n6_mul_cast_1;  // sfix14_En10
  wire signed [13:0] n4_mul;  // sfix14_En11
  wire signed [13:0] p22n4_mul_1;  // sfix14_En11
  wire signed [14:0] p22n4_mul_cast;  // sfix15_En11
  wire signed [13:0] p22n4_mul_cast_1;  // sfix14_En10
  wire signed [13:0] n5_mul;  // sfix14_En10
  wire signed [2:0] p10n5_mul_cast;  // sfix3
  wire signed [16:0] p10n5_mul_mul_temp;  // sfix17_En11
  wire signed [15:0] p10n5_mul_cast_1;  // sfix16_En11
  wire signed [13:0] n7_mul;  // sfix14_En11
  wire signed [13:0] p14n7_mul_1;  // sfix14_En11
  wire signed [14:0] p14n7_mul_cast;  // sfix15_En11
  wire signed [13:0] p14n7_mul_cast_1;  // sfix14_En10
  wire signed [13:0] n11_add;  // sfix14_En11
  wire signed [13:0] n12_add;  // sfix14_En11
  wire signed [15:0] p18n12_add_add_cast;  // sfix16_En11
  wire signed [15:0] p18n12_add_add_cast_1;  // sfix16_En11
  wire signed [15:0] p18n12_add_add_temp;  // sfix16_En11
  wire signed [13:0] n13_add;  // sfix14_En11


  assign enb = clk_enable;

  always @(posedge clk or posedge reset)
    begin : n10_add_reg_3_reg_process
      if (reset == 1'b1) begin
        n10_add_reg_3 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          n10_add_reg_3 <= n10_add_reg_2;
        end
      end
    end



  assign p8n3_mul_cast = {1'b0, a3};
  assign p8n3_mul_mul_temp = p8n3_mul_cast * n10_add_reg_3;
  assign p8n3_mul_cast_1 = p8n3_mul_mul_temp[27:0];
  assign p8n3_mul_cast_2 = {{3{p8n3_mul_cast_1[27]}}, p8n3_mul_cast_1[27:17]};
  assign n3_mul = {p8n3_mul_cast_2[9:0], 4'b0000};



  always @(posedge clk or posedge reset)
    begin : n10_add_reg_2_reg_process
      if (reset == 1'b1) begin
        n10_add_reg_2 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          n10_add_reg_2 <= n10_add_reg_1;
        end
      end
    end



  assign p6n2_mul_mul_temp = a2 * n10_add_reg_2;
  assign p6n2_mul_cast = {p6n2_mul_mul_temp[27], p6n2_mul_mul_temp[27:15]};
  assign n2_mul = {p6n2_mul_cast[10:0], 3'b000};



  assign p15n8_add_add_cast = {n2_mul[13], {n2_mul, 1'b0}};
  assign p15n8_add_add_cast_1 = {{2{n3_mul[13]}}, n3_mul};
  assign p15n8_add_add_temp = p15n8_add_add_cast + p15n8_add_add_cast_1;
  assign p15n8_add_cast = {p15n8_add_add_temp[15], p15n8_add_add_temp[15:3]};
  assign n8_add = {p15n8_add_cast[12:0], 1'b0};



  // HDL code generation from MATLAB function: Direct_Form_IIR_Figure4_GeneratedCode_fixpt
  // 
  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  // 
  //                                                                          %
  // 
  //           Generated by MATLAB 9.7 and Fixed-Point Designer 6.4           %
  // 
  //                                                                          %
  // 
  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  always @(posedge clk or posedge reset)
    begin : n10_add_reg_1_reg_process
      if (reset == 1'b1) begin
        n10_add_reg_1 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          n10_add_reg_1 <= tmp;
        end
      end
    end



  assign p4n1_mul_mul_temp = a1 * n10_add_reg_1;
  assign p4n1_mul_cast = {{2{p4n1_mul_mul_temp[27]}}, p4n1_mul_mul_temp[27:16]};
  assign n1_mul = {p4n1_mul_cast[9:0], 4'b0000};



  assign p17n9_add_add_cast = {{3{n1_mul[13]}}, n1_mul};
  assign p17n9_add_add_cast_1 = {n8_add[13], {n8_add, 2'b00}};
  assign p17n9_add_add_temp = p17n9_add_add_cast + p17n9_add_add_cast_1;
  assign p17n9_add_cast = p17n9_add_add_temp[16:3];
  assign n9_add = {p17n9_add_cast[12:0], 1'b0};



  assign p19tmp_add_cast = {x[13], x};
  assign p19tmp_add_cast_1 = {n9_add[13], n9_add};
  assign p19tmp_add_temp = p19tmp_add_cast + p19tmp_add_cast_1;
  assign tmp = p19tmp_add_temp[14:1];



  assign p12n6_mul_1 = (b2 == 1'b1 ? n10_add_reg_2 :
              14'sb00000000000000);
  assign p12n6_mul_cast = {p12n6_mul_1[13], p12n6_mul_1};
  assign p12n6_mul_cast_1 = p12n6_mul_cast[14:1];
  assign n6_mul = {p12n6_mul_cast_1[12:0], 1'b0};



  assign p22n4_mul_1 = (b0 == 1'b1 ? tmp :
              14'sb00000000000000);
  assign p22n4_mul_cast = {p22n4_mul_1[13], p22n4_mul_1};
  assign p22n4_mul_cast_1 = p22n4_mul_cast[14:1];
  assign n4_mul = {p22n4_mul_cast_1[12:0], 1'b0};



  assign p10n5_mul_cast = {1'b0, b1};
  assign p10n5_mul_mul_temp = p10n5_mul_cast * n10_add_reg_1;
  assign p10n5_mul_cast_1 = p10n5_mul_mul_temp[15:0];
  assign n5_mul = p10n5_mul_cast_1[14:1];



  assign p14n7_mul_1 = (b3 == 1'b1 ? n10_add_reg_3 :
              14'sb00000000000000);
  assign p14n7_mul_cast = {p14n7_mul_1[13], p14n7_mul_1};
  assign p14n7_mul_cast_1 = p14n7_mul_cast[14:1];
  assign n7_mul = {p14n7_mul_cast_1[12:0], 1'b0};



  assign n11_add = n6_mul + n7_mul;



  assign p18n12_add_add_cast = {n5_mul[13], {n5_mul, 1'b0}};
  assign p18n12_add_add_cast_1 = {{2{n11_add[13]}}, n11_add};
  assign p18n12_add_add_temp = p18n12_add_add_cast + p18n12_add_add_cast_1;
  assign n12_add = p18n12_add_add_temp[13:0];



  assign n13_add = n4_mul + n12_add;



  assign ce_out = clk_enable;

  assign y = n13_add;

endmodule  // Direct_Form_IIR_Figure4_GeneratedCode_fixpt

